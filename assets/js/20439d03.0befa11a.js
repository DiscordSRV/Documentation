"use strict";(self.webpackChunkdiscordsrv_documentation=self.webpackChunkdiscordsrv_documentation||[]).push([[8546],{5365:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/playerteleportevent-class-name-example-1ce413a36c5c8177960be33e41c96748.png"},7957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"alerts/migration","title":"Alerts migration for fully qualified class names","description":"Background","source":"@site/docs/alerts/migration.mdx","sourceDirName":"alerts","slug":"/alerts/migration","permalink":"/alerts/migration","draft":false,"unlisted":false,"editUrl":"https://github.com/DiscordSRV/Documentation/edit/master/docs/alerts/migration.mdx","tags":[],"version":"current","lastUpdatedBy":"Henri Schubin","lastUpdatedAt":1753402343000,"frontMatter":{"title":"Alerts migration for fully qualified class names"}}');var a=n(4848),s=n(8453);const r={title:"Alerts migration for fully qualified class names"},o=void 0,l={},c=[{value:"Background",id:"background",level:2},{value:"Solution",id:"solution",level:2},{value:"Upgrading",id:"upgrading",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"background",children:"Background"}),"\n",(0,a.jsx)(t.p,{children:"In v1.29.0 and below, DiscordSRV listened to every single Bukkit event by hackily registering to every HandlerList.\nThis causes various performance issues as well as some unexpected side effects with special events.\nPaper 1.21.5 has blocked the ability to change the handlerlist collection, preventing this approach from working entirely."}),"\n",(0,a.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,a.jsxs)(t.p,{children:["Starting with v1.30.0, DiscordSRV now requires that all event names be defined using their fully-qualified names (that is, including their package name).\nFor example instead of ",(0,a.jsx)(t.code,{children:"PlayerTeleportEvent"})," you need to use ",(0,a.jsx)(t.code,{children:"org.bukkit.event.player.PlayerTeleportEvent"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"upgrading",children:"Upgrading"}),"\n",(0,a.jsxs)(t.p,{children:["Look for the fully-qualified class names from ",(0,a.jsx)(t.a,{href:"https://jd.papermc.io/paper/",children:"Paper's javadocs"})," or from the documentation of plugin's that your alerts are from.\nBelow is an image for how to identify the fully-qualified class name for an event on javadocs. Javadocs usually have search at the top right"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"DiscordSRV",src:n(5365).A+"",width:"1137",height:"918"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);