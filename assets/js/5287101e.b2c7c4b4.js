"use strict";(self.webpackChunkdiscordsrv_documentation=self.webpackChunkdiscordsrv_documentation||[]).push([[9696],{5537:(e,t,r)=>{r.d(t,{A:()=>w});var s=r(6540),n=r(8215),l=r(5627),i=r(6347),o=r(372),a=r(604),c=r(1861),d=r(8749);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:r,attributes:s,default:n}}=e;return{value:t,label:r,attributes:s,default:n}}))}(r);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function x(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const n=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,a.aZ)(l),(0,s.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,l=h(e),[i,a]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:l}))),[c,u]=p({queryString:r,groupId:n}),[m,f]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,d.Dv)(r);return[n,(0,s.useCallback)((e=>{r&&l.set(e)}),[r,l])]}({groupId:n}),b=(()=>{const e=c??m;return x({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{b&&a(b)}),[b]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!x({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),f(e)}),[u,f,l]),tabValues:l}}var f=r(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(4848);function v(e){let{className:t,block:r,selectedValue:s,selectValue:i,tabValues:o}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const t=e.currentTarget,r=a.indexOf(t),n=o[r].value;n!==s&&(c(t),i(n))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;t=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;t=a[r]??a[a.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>{a.push(e)},onKeyDown:u,onClick:d,...l,className:(0,n.A)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":s===t}),children:r??t},t)}))})}function g(e){let{lazy:t,children:r,selectedValue:l}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===l));return e?(0,s.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==l})))})}function y(e){const t=m(e);return(0,j.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,j.jsx)(v,{...t,...e}),(0,j.jsx)(g,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(t))}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var s=r(6540);const n={},l=s.createContext(n);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(l.Provider,{value:t},e.children)}},9329:(e,t,r)=>{r.d(t,{A:()=>i});r(6540);var s=r(8215);const n={tabItem:"tabItem_Ymn6"};var l=r(4848);function i(e){let{children:t,hidden:r,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.A)(n.tabItem,i),hidden:r,children:t})}},9478:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"lp-contexts","title":"LuckPerms Contexts","description":"Allows permissions/groups/prefixes/etc to be assigned easily based on certain DiscordSRV states.","source":"@site/docs/lp-contexts.mdx","sourceDirName":".","slug":"/lp-contexts","permalink":"/lp-contexts","draft":false,"unlisted":false,"editUrl":"https://github.com/DiscordSRV/Documentation/edit/master/docs/lp-contexts.mdx","tags":[],"version":"current","lastUpdatedBy":"ANutley","lastUpdatedAt":1719422078000,"frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Permissions","permalink":"/permissions"},"next":{"title":"PlaceholderAPI Placeholders","permalink":"/papi-placeholders"}}');var n=r(4848),l=r(8453),i=r(5537),o=r(9329);const a={},c="LuckPerms Contexts",d={},u=[{value:"Examples",id:"examples",level:5}];function h(e){const t={a:"a",code:"code",h1:"h1",h5:"h5",header:"header",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"luckperms-contexts",children:"LuckPerms Contexts"})}),"\n",(0,n.jsx)(t.p,{children:"Allows permissions/groups/prefixes/etc to be assigned easily based on certain DiscordSRV states."}),"\n",(0,n.jsxs)(t.p,{children:["More information about contexts can be found here: ",(0,n.jsx)(t.a,{href:"https://luckperms.net/wiki/Context",children:"https://luckperms.net/wiki/Context"})]}),"\n",(0,n.jsx)(t.p,{children:"Available contexts:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"discordsrv:linked"})," - whether the player has linked a Discord account (true/false)"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"discordsrv:boosting"})," - whether the player is boosting the Discord guild (true/false)"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"discordsrv:role"})," - the role the user has in Discord"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"discordsrv:role_id"})," - the role id the user has in Discord"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"discordsrv:server_id"})," - whether the user is a member of the server with the given id (which the bot is also a part of)"]}),"\n"]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsxs)("summary",{children:["Is a user fulfilling the LP context in ",(0,n.jsx)(t.code,{children:"/lp user <user> info"})," but not actually receiving the group?"]}),(0,n.jsxs)(t.p,{children:["If a user seems to be fulfilling the LuckPerms context in ",(0,n.jsx)(t.code,{children:"/lp user <user> info"})," but they don't get their primary group set when adding a higher weighted parent with the relevant context then set ",(0,n.jsx)(t.code,{children:"primary-group-calculation"})," to ",(0,n.jsx)(t.code,{children:"all-parents-by-weight"})," in the LuckPerms config."]})]}),"\n",(0,n.jsx)(t.h5,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(o.A,{value:"discordsrv-linked",label:"discordsrv:linked",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Command"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/lp group default permission set essentials.fly true discordsrv:linked=true"})}),(0,n.jsxs)(t.td,{children:["will give all users access to ",(0,n.jsx)(t.code,{children:"/fly"})," if they have their account linked to Discord"]})]})})]})}),(0,n.jsx)(o.A,{value:"discordsrv-boosting",label:"discordsrv:boosting",children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Command"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/lp group default meta addsuffix 100 &d[Boost] discordsrv:boosting=true"})}),(0,n.jsxs)(t.td,{children:["will give a pink ",(0,n.jsx)(t.code,{children:"[Boost]"})," suffix to all users boosting the Discord guild"]})]})})]})}),(0,n.jsx)(o.A,{value:"discordsrv-role",label:"discordsrv:role",children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Command"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/lp group default permission set chat.use false discordsrv:role=muted"})}),(0,n.jsxs)(t.td,{children:["will negate the ",(0,n.jsx)(t.code,{children:"chat.use"})," permission for anyone with the ",(0,n.jsx)(t.code,{children:"muted"})," role in Discord"]})]})})]})}),(0,n.jsx)(o.A,{value:"discordsrv-role_id",label:"discordsrv:role_id",children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Command"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/lp group default permission set chat.use false discordsrv:role_id=000000000000"})}),(0,n.jsxs)(t.td,{children:["will negate the ",(0,n.jsx)(t.code,{children:"chat.use"})," permission for anyone with the role that has the ",(0,n.jsx)(t.code,{children:"000000000000"})," ID in Discord"]})]})})]})}),(0,n.jsx)(o.A,{value:"discordsrv-server_id",label:"discordsrv:server_id",children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Command"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/lp group default permission set essentials.back true discordsrv:server_id=000000000000"})}),(0,n.jsxs)(t.td,{children:["will give all users access to ",(0,n.jsx)(t.code,{children:"/back"})," for anyone in the server that has the ",(0,n.jsx)(t.code,{children:"000000000000"})," ID in Discord"]})]})})]})})]}),"\n",(0,n.jsxs)(t.p,{children:["These can be disabled using a ",(0,n.jsx)(t.code,{children:"LuckPerms-Contexts"})," entry in the ",(0,n.jsx)(t.code,{children:"DisabledPluginHooks"})," config section."]}),"\n",(0,n.jsxs)(t.p,{children:["Original implementation: ",(0,n.jsx)(t.a,{href:"https://github.com/DiscordSRV/DiscordSRV/pull/728",children:"https://github.com/DiscordSRV/DiscordSRV/pull/728"})]})]})}function x(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);